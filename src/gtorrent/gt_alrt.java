package gtorrent;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import gtorrent.GtorrentLibrary.alert;
import gtorrent.GtorrentLibrary.session;
import java.util.Arrays;
import java.util.List;
/**
 * simple gt_alert structure<br>
 * <i>native declaration : /usr/include/inttypes.h:559</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class gt_alrt extends Structure {
	/** C type : session* */
	public session ses;
	/** C type : gt_torrent* */
	public gtorrent.gt_trnt.ByReference trnt;
	/**
	 * more-complex alert object pointer<br>
	 * C type : alert*
	 */
	public alert al;
	/**
	 * @see alert_type<br>
	 * simple alert type<br>
	 * C type : alert_type
	 */
	public int type;
	public gt_alrt() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ses", "trnt", "al", "type");
	}
	/**
	 * @param ses C type : session*<br>
	 * @param trnt C type : gt_torrent*<br>
	 * @param al more-complex alert object pointer<br>
	 * C type : alert*<br>
	 * @param type @see alert_type<br>
	 * simple alert type<br>
	 * C type : alert_type
	 */
	public gt_alrt(session ses, gtorrent.gt_trnt.ByReference trnt, alert al, int type) {
		super();
		this.ses = ses;
		this.trnt = trnt;
		this.al = al;
		this.type = type;
	}
	public gt_alrt(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends gt_alrt implements Structure.ByReference {
		
	};
	public static class ByValue extends gt_alrt implements Structure.ByValue {
		
	};
}
